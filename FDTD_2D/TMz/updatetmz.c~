#include "fdtd-macro-tmz.h"
2
3
4
5
/* update magnetic field */
void updateH2d(Grid *g) {
int mm, nn;
6
if (Type == oneDGrid) {
for (mm = 0; mm < SizeX - 1; mm++)
Hy1(mm) = Chyh1(mm) * Hy1(mm)
+ Chye1(mm) * (Ez1(mm + 1) - Ez1(mm));
} else {
for (mm = 0; mm < SizeX; mm++)
for (nn = 0; nn < SizeY - 1; nn++)
Hx(mm, nn) = Chxh(mm, nn) * Hx(mm, nn)
- Chxe(mm, nn) * (Ez(mm, nn + 1) - Ez(mm, nn));
7
8
9
10
11
12
13
14
15
16
for (mm = 0; mm < SizeX - 1; mm++)
for (nn = 0; nn < SizeY; nn++)
Hy(mm, nn) = Chyh(mm, nn) * Hy(mm, nn)
+ Chye(mm, nn) * (Ez(mm + 1, nn) - Ez(mm, nn));
17
18
19
20
}
21
22
return;
23
24
}
25
26
27
28
/* update electric field */
void updateE2d(Grid *g) {
int mm, nn;
29
30
31
32
33
34
35
36
37
38
39
if (Type == oneDGrid) {
for (mm = 1; mm < SizeX - 1; mm++)
Ez1(mm) = Ceze1(mm) * Ez1(mm)
+ Cezh1(mm) * (Hy1(mm) - Hy1(mm - 1));
} else {
for (mm = 1; mm < SizeX - 1; mm++)
for (nn = 1; nn < SizeY - 1; nn++)
Ez(mm, nn) = Ceze(mm, nn) * Ez(mm, nn) +
Cezh(mm, nn) * ((Hy(mm, nn) - Hy(mm - 1, nn)) -
(Hx(mm, nn) - Hx(mm, nn - 1)));198
CHAPTER 8. TWO-DIMENSIONAL FDTD SIMULATIONS
}
40
41
return;
42
43
}
